import { groupBy } from "../utils/groupBy.js";
export async function applyScriptsToSystem(scripts, runner) {
    const commandsByPhase = groupBy(scripts.filter((script) => typeof script === "object"), (script) => script.phase);
    const commandsStandalone = scripts.filter((script) => typeof script === "string");
    const phaseKeys = Object.keys(commandsByPhase)
        .map((key) => Number(key))
        .sort();
    const commandsStandaloneTask = Promise.all(commandsStandalone.map(async (command) => await runner(command)));
    for (const phase of phaseKeys) {
        await Promise.all(commandsByPhase[phase].map(async (command) => {
            for (const script of command.commands) {
                await runner(script);
            }
        }));
    }
    await commandsStandaloneTask;
}
//# sourceMappingURL=applyScriptsToSystem.js.map