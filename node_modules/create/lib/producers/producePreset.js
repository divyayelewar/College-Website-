// eslint-disable-next-line @eslint-community/eslint-comments/disable-enable-pair
/* eslint-disable @typescript-eslint/unified-signatures */
import { createSystemContext } from "../system/createSystemContext.js";
import { executePresetBlocks } from "./executePresetBlocks.js";
import { produceBase } from "./produceBase.js";
export async function producePreset(preset, { directory = ".", mode, options, optionsAugment, ...providedSystem }) {
    const system = createSystemContext({
        directory,
        ...providedSystem,
    });
    // From engine/apis/producers.md > `optionsAugment`,
    // Preset options are generated through three steps...
    // 1. Any options provided by producePreset's second parameter's options
    const providedOptions = options ?? {};
    // 2. Calling the Preset's Base's produce method, if it exists
    const producedOptions = await produceBase(preset.base, {
        options: providedOptions,
        ...system,
    });
    // 3. Calling to an optional optionsAugment method of producePreset's second parameter
    const optionsForAugmentation = {
        ...producedOptions,
        ...providedOptions,
    };
    const augmentedOptions = await optionsAugment?.(optionsForAugmentation);
    const fullOptions = {
        ...optionsForAugmentation,
        ...augmentedOptions,
    };
    const creation = executePresetBlocks(preset, fullOptions, { ...system, directory }, mode);
    return {
        creation: {
            addons: [],
            files: {},
            requests: [],
            scripts: [],
            ...creation,
        },
        options: fullOptions,
    };
}
//# sourceMappingURL=producePreset.js.map