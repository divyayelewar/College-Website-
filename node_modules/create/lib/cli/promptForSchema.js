import * as z from "zod";
import { promptForBoolean } from "./promptForBoolean.js";
export async function promptForSchema(rl, key, schema) {
    const def = schema._def;
    let value;
    while (value === undefined || value === "") {
        switch (def.typeName) {
            case z.ZodFirstPartyTypeKind.ZodBoolean: {
                value = await promptForBoolean(rl, `Enter y or n for ${key}.\n`);
                break;
            }
            case z.ZodFirstPartyTypeKind.ZodNumber:
                value = schema.parse(Number(await rl.question(`Enter a value for ${key}.\n`)));
                break;
            // TODO: Handle numeric literals, unions, ...
            default:
                value = schema.parse(await rl.question(`Enter a value for ${key}.\n`));
                break;
        }
    }
    return value;
}
//# sourceMappingURL=promptForSchema.js.map