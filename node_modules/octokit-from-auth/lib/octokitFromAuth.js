import { getGitHubAuthToken } from "get-github-auth-token";
import { Octokit } from "octokit";
async function octokitFromAuth(options) {
  const auth = await retrieveAuth(options?.auth);
  return new Octokit({ ...options, auth });
}
async function retrieveAuth(provided) {
  if (provided) {
    return provided;
  }
  if (provided === "") {
    throw new Error("Invalid auth provided: an empty string ('').");
  }
  const auth = await getGitHubAuthToken();
  if (auth.succeeded) {
    return auth.token;
  }
  throw new Error(
    "Please provide an auth token (process.env.GH_TOKEN) or log in with the GitHub CLI (gh).",
    {
      cause: auth.error
    }
  );
}
export {
  octokitFromAuth
};
//# sourceMappingURL=octokitFromAuth.js.map